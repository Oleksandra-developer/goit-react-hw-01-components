{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistic/Statistic.module.css","components/Transaction/Transaction.module.css","components/Container/Container.js","components/Profile/Profile.js","components/Statistic/Statistics.js","components/FriendList/FriendsListItem.js","components/FriendList/FriendsList.js","components/Transaction/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","Profile","name","tag","location","avatar","stats","followers","views","likes","styles","profile","description","src","alt","label","quantity","defaultProps","PropTypes","string","isRequired","shape","number","Statistics","title","statistics","statList","map","id","percentage","item","symbol","FriendsListItem","isOnline","statusEnable","statusDisable","width","bool","FriendsList","friends","friendList","TransactionHistory","items","transactionHistory","transactionHead","type","amount","currency","App","user","statData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8966ebd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__3FLDN\",\"profile\":\"Profile_profile__24mzo\",\"description\":\"Profile_description__9VLBn\",\"name\":\"Profile_name__3Kimf\",\"stats\":\"Profile_stats__1SCu-\",\"label\":\"Profile_label__20xn1\",\"quantity\":\"Profile_quantity__2prUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1eJQT\",\"item\":\"FriendList_item__1RA25\",\"avatar\":\"FriendList_avatar__mPQ2x\",\"name\":\"FriendList_name__3s9rE\",\"statusDisable\":\"FriendList_statusDisable__3wq7M\",\"statusEnable\":\"FriendList_statusEnable__1Cace\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__3bxZ8\",\"title\":\"Statistic_title__1AG8s\",\"statList\":\"Statistic_statList__1y2Yc\",\"item\":\"Statistic_item__23z8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transaction_transactionHistory__3Ceqg\",\"transactionHead\":\"Transaction_transactionHead___3HBL\"};","import React from \"react\";\r\nimport \"./Container.css\";\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\n// import ReactDOM from \"react-dom\";\r\n// import user from \"./user.json\";\r\n\r\nconst Profile = ({\r\n  name,\r\n  tag,\r\n  location,\r\n  avatar,\r\n  stats: { followers, views, likes },\r\n}) => (\r\n  <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className=\"tag\">@{tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n      <li>\r\n        <span className={styles.label}>Followers </span>\r\n        <span className={styles.quantity}>{followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Views </span>\r\n        <span className={styles.quantity}>{views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Likes </span>\r\n        <span className={styles.quantity}>{likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\nProfile.defaultProps = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistic.module.css\";\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n    <ul className={styles.statList}>\r\n      {stats.map(({ id, label, percentage }) => (\r\n        <li className={styles.item} key={id}>\r\n          <span className=\"label\">{label}</span>\r\n          <span className=\"percentage\">{percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  id: PropTypes.number,\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.symbol.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FriendList.module.css\";\r\n\r\nconst FriendsListItem = ({ avatar, name, isOnline, id }) => (\r\n  <li className={styles.item} key={id}>\r\n    <span\r\n      className={isOnline ? styles.statusEnable : styles.statusDisable}\r\n    ></span>\r\n\r\n    <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n    <p className={styles.name}>{name}</p>\r\n  </li>\r\n);\r\nFriendsListItem.defaultProps = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n};\r\nexport default FriendsListItem;\r\n","import React from \"react\";\r\nimport FriendsListItem from \"./FriendsListItem\";\r\nimport styles from \"./FriendList.module.css\";\r\n\r\nconst FriendsList = ({ friends }) => (\r\n  <ul className={styles.friendList}>\r\n    {friends.map(({ avatar, name, isOnline, id }) => (\r\n      <FriendsListItem\r\n        avatar={avatar}\r\n        name={name}\r\n        isOnline={isOnline}\r\n        id={id}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default FriendsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Transaction.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.transactionHistory}>\r\n    <thead>\r\n      <tr>\r\n        <th className={styles.transactionHead}>Type</th>\r\n        <th className={styles.transactionHead}>Amount</th>\r\n        <th className={styles.transactionHead}>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(({ id, type, amount, currency }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\nTransactionHistory.defaultProps = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  amount: PropTypes.number,\r\n  currency: PropTypes.string,\r\n};\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport Container from \"./components/Container/Container\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport user from \"./components/Profile/user.json\";\n\nimport Statistics from \"./components/Statistic/Statistics\";\nimport statData from \"./components/Statistic/statistical-data.json\";\n\nimport friends from \"./components/FriendList/friends.json\";\nimport FriendsList from \"./components/FriendList/FriendsList\";\n\nimport transactions from \"./components/Transaction/transactions.json\";\nimport TransactionHistory from \"./components/Transaction/TransactionHistory\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <>\n      <Container>\n        <section title=\"Task 1\">\n          <Profile\n            name={user.name}\n            tag={user.tag}\n            location={user.location}\n            avatar={user.avatar}\n            stats={user.stats}\n          />\n        </section>\n\n        <section title=\"Task 2\">\n          <Statistics title=\"Upload stats\" stats={statData} />\n          <Statistics stats={statData} />\n        </section>\n\n        <section title=\"Task 3\">\n          <FriendsList friends={friends} />\n        </section>\n\n        <section title=\"Task 4\">\n          <TransactionHistory items={transactions} />\n        </section>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"modern-normalize/modern-normalize.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}